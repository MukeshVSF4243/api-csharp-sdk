// <copyright file="BehalfDocument.cs" company="Syncfusion Inc">
// Copyright (c) Syncfusion Inc. All rights reserved.
// </copyright>

/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.Text;
    using Newtonsoft.Json;

    /// <summary>
    ///     The behalf documents properties include users who acted on it, activity date, cc details, created date, and so on.
    /// </summary>
    [DataContract]
    public class BehalfDocument : Document
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="BehalfDocument" /> class.
        /// </summary>
        /// <param name="documentId">Gets or sets the document id..</param>
        /// <param name="senderDetail">senderDetail.</param>
        /// <param name="ccDetails">Gets or sets the CC details..</param>
        /// <param name="createdDate">Gets or sets the createdDate..</param>
        /// <param name="activityDate">Gets or sets the activityDate..</param>
        /// <param name="activityBy">Gets or sets the activityBy..</param>
        /// <param name="messageTitle">Gets or sets the messageTitle..</param>
        /// <param name="status">status.</param>
        /// <param name="signerDetails">Gets or sets the signerDetails..</param>
        /// <param name="expiryDate">Gets or sets the expiryDate..</param>
        /// <param name="enableSigningOrder">Gets or sets a value indicating whether to enable signing order..</param>
        /// <param name="labels">Gets or sets the labels.</param>
        /// <param name="behalf">Gets or sets the behalf details.</param>
        public BehalfDocument(
            string documentId = default,
            DocumentSenderDetail senderDetail = default,
            List<DocumentCcDetails> ccDetails = default,
            long createdDate = default,
            long? activityDate = default,
            string activityBy = default,
            string messageTitle = default,
            DocumentStatus? status = default,
            List<DocumentSignerDetails> signerDetails = default,
            long? expiryDate = default,
            bool enableSigningOrder = default,
            List<string> labels = default,
            BehalfOf behalf = default)
            : base(
                  documentId: documentId,
                  senderDetail: senderDetail,
                  ccDetails: ccDetails,
                  createdDate: createdDate,
                  activityDate: activityDate,
                  activityBy: activityBy,
                  messageTitle: messageTitle,
                  status: status,
                  signerDetails: signerDetails,
                  expiryDate: expiryDate,
                  enableSigningOrder: enableSigningOrder,
                  labels: labels)
        {
            this.BehalfOf = behalf;
        }

        /// <summary>
        ///     Gets or sets the behalf detail.
        /// </summary>
        [DataMember(Name = "behalfOf", EmitDefaultValue = false)]
        public BehalfOf BehalfOf { get; set; }
    }
}